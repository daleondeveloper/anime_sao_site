server.port=8084

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## Secure
jwt.token.secret = jwtapp
jwt.token.expired = 3600000

## PostgreSQL
spring.jpa.database= POSTGRESQL

spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=true
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.show-sql =true

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.data.jpa.repositories.bootstrap-mode=default
logging.level.org.hibernate.SQL=debug

#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.html

spring.thymeleaf.prefix=/WEB-INF/jsp/
spring.thymeleaf.suffix=.html
#spring.thymeleaf.enabled=false

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB


# Tomcat
server.tomcat.resource.allow-caching=false
server.tomcat.resource.cache-ttl=1
#server.tomcat.additional-tld-skip-patterns=*.jar